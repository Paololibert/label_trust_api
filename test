

        // Binds the implementation of RoleRESTfulReadWriteServiceContract to the RoleRESTfulReadWriteService class.
        $this->app->bind(
            \Domains\Roles\Services\RESTful\Contracts\RoleRESTfulReadWriteServiceContract::class,
            function ($app) {
                // Resolve the dependencies required by \Domains\Roles\Services\RESTful\RoleRESTfulReadWriteService$
                $roleReadWriteRepository = $app->make(\Domains\Roles\Repositories\RoleReadWriteRepository::class);
 
                $writeService = $app->make(
                    \Core\Logic\Services\Contracts\ReadWriteServiceContract::class,
                    [$roleReadWriteRepository]
                );
 
                // Create and return an instance of RoleRESTfulReadWriteService
                return new \Domains\Roles\Services\RESTful\RoleRESTfulReadWriteService($writeService);
            }
        );

        // Binds the implementation of RoleRESTfulQueryServiceContract to the RoleRESTfulQueryService class.
        $this->app->bind(
            \Domains\Roles\Services\RESTful\Contracts\RoleRESTfulQueryServiceContract::class,
            function ($app) {
                // Resolve the dependencies required by \Domains\Roles\Services\RESTful\RoleRESTfulQueryService$
                $roleReadOnlyRepository = $app->make(\Domains\Roles\Repositories\RoleReadOnlyRepository::class);
 
                $queryService = $app->make(
                    \Core\Logic\Services\Contracts\QueryServiceContract::class,
                    [$roleReadOnlyRepository]
                );
 
                // Create and return an instance of RoleRESTfulQueryService
                return new \Domains\Roles\Services\RESTful\RoleRESTfulQueryService($queryService);
            }
        );




        // Bind ReadOnlyRepositoryInterface to RoleReadOnlyRepository
        $this->app->when(\App\Http\Controllers\APIs\RESTful\V1\RoleController::class)
            ->needs(
                \Core\Data\Repositories\Contracts\ReadOnlyRepositoryInterface::class
            )
            ->give(\Domains\Roles\Repositories\RoleReadOnlyRepository::class);


        // Bind ReadWriteRepositoryInterface to RoleReadWriteRepository
        $this->app->when(\App\Http\Controllers\APIs\RESTful\V1\RoleController::class)
            ->needs(
                \Core\Data\Repositories\Contracts\ReadWriteRepositoryInterface::class
            )
            ->give(\Domains\Roles\Repositories\RoleReadWriteRepository::class);