{
    "get": {
        "summary": "Retrieve a list of permissions",
        "description": "Retrieves permissions information based on certain criteria.",
        "responses": {
            "200": {
                "description": "Successfully Response",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "boolean",
                                    "description": "Indicates whether the request was successful.",
                                    "default": true,
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Additional information about the response.",
                                    "nullable": true,
                                    "default": null,
                                    "example": "List of permissions retrieve successfully"
                                },
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "current_page": {
                                            "type": "integer",
                                            "description": "The current page number.",
                                            "default": 1,
                                            "minimum": 1,
                                            "example": 1
                                        },
                                        "data": {
                                            "type": "array",
                                            "description": "List of permissions.",
                                            "items": {
                                                "$ref": "./../components/schemas/models/permission.json#/Permission"
                                            }
                                        },
                                        "first_page_url": {
                                            "type": "string",
                                            "description": "The URL of the first page."
                                        },
                                        "from": {
                                            "type": "integer",
                                            "description": "The index of the first item in the current page.",
                                            "nullable": true,
                                            "default": null,
                                            "example": 1
                                        },
                                        "last_page": {
                                            "type": "integer",
                                            "description": "The index of the last item in the current page.",
                                            "minimum": 1,
                                            "default": 1,
                                            "example": 1
                                        },
                                        "last_page_url": {
                                            "type": "string",
                                            "description": "The URL of the last page."
                                        },
                                        "links": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "url": {
                                                        "type": "string",
                                                        "description": "The URL of the page.",
                                                        "nullable": true,
                                                        "default": null,
                                                        "example": null
                                                    },
                                                    "label": {
                                                        "type": "string",
                                                        "description": "The label of the page.",
                                                        "nullable": true,
                                                        "default": "1",
                                                        "example": "&laquo; Previous"
                                                    },
                                                    "active": {
                                                        "type": "boolean",
                                                        "description": "Indicates whether the page is active.",
                                                        "default": false,
                                                        "example": true
                                                    }
                                                }
                                            }
                                        },
                                        "next_page_url": {
                                            "type": "string",
                                            "description": "The URL of the next page.",
                                            "nullable": true,
                                            "default": null,
                                            "example": null
                                        },
                                        "path": {
                                            "type": "string",
                                            "description": "The path of the current page."
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "description": "The total number of items available per page. Defaults to 15, with a minimum of 10 and a maximum of 25.",
                                            "default": 15,
                                            "example": 15,
                                            "minimum": 10,
                                            "maximum": 25
                                        },
                                        "prev_page_url": {
                                            "type": "string",
                                            "description": "The URL of the previous page.",
                                            "nullable": true,
                                            "default": null,
                                            "example": null
                                        },
                                        "to": {
                                            "type": "integer",
                                            "description": "The ending index of the data on the current page. Example value is 2. Can be null.",
                                            "example": null,
                                            "default": null,
                                            "nullable": true
                                        },
                                        "total": {
                                            "type": "integer",
                                            "description": "The total number of items.",
                                            "minimum": 0,
                                            "default": 0,
                                            "example": 0
                                        }
                                    }
                                },
                                "status_code": {
                                    "type": "integer",
                                    "description": "Indicates whether the request was successful.",
                                    "default": 200,
                                    "example": 200
                                }
                            }
                        }
                    }
                }
            },
            "400": {
                "description": "Bad Request",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "boolean",
                                    "description": "Indicates whether the request was unsuccessful.",
                                    "default": false,
                                    "example": false
                                },
                                "message": {
                                    "type": "string",
                                    "description": "A brief description of the error, if any.",
                                    "nullable": true,
                                    "default": null,
                                    "example": "The request body is missing the required 'name' parameter."
                                },
                                "error": {
                                    "type": "string",
                                    "description": "Additional information about the error, if available.",
                                    "nullable": true,
                                    "default": null,
                                    "example": null
                                },
                                "status_code": {
                                    "type": "integer",
                                    "description": "The HTTP status code indicating the request could not be processed due to incorrect syntax, invalid parameters, or missing required parameters.",
                                    "default": 400,
                                    "example": 400
                                }
                            }
                        }
                    }
                }
            },
            "429": {
                "description": "Too Many Requests: Rate Limit Exceeded",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "boolean",
                                    "description": "Indicates whether the request was unsuccessful.",
                                    "default": false,
                                    "example": false
                                },
                                "message": {
                                    "type": "string",
                                    "description": "A brief description of the error, if any.",
                                    "nullable": true,
                                    "default": null,
                                    "example": "Rate Limit Exceeded"
                                },
                                "error": {
                                    "type": "string",
                                    "description": "Additional information about the error, if available.",
                                    "nullable": true,
                                    "default": null,
                                    "example": null
                                },
                                "status_code": {
                                    "type": "integer",
                                    "description": "The HTTP status code indicating the client has exceeded the rate limit for the endpoint.",
                                    "default": 429,
                                    "example": 429
                                }
                            }
                        }
                    }
                }
            },
            "500": {
                "description": "Internal server error",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "boolean",
                                    "description": "Indicates whether the request was unsuccessful.",
                                    "default": false,
                                    "example": false
                                },
                                "message": {
                                    "type": "string",
                                    "description": "A brief description of the error, if any.",
                                    "nullable": true,
                                    "default": null,
                                    "example": "Internal Server Error occurred while processing the request."
                                },
                                "error": {
                                    "type": "string",
                                    "description": "Additional information about the error, if available.",
                                    "nullable": true,
                                    "default": null,
                                    "example": null
                                },
                                "status_code": {
                                    "type": "integer",
                                    "description": "The HTTP status code indicating an unexpected error occurred on the server while processing the request.",
                                    "default": 500,
                                    "example": 500
                                }
                            }
                        }
                    }
                }
            },
            "503": {
                "description": "Service Unavailable",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "boolean",
                                    "description": "Indicates whether the request was unsuccessful.",
                                    "default": false,
                                    "example": false
                                },
                                "message": {
                                    "type": "string",
                                    "description": "A brief description of the error, if any.",
                                    "nullable": true,
                                    "default": null,
                                    "example": "Service Unavailable"
                                },
                                "error": {
                                    "type": "string",
                                    "description": "Additional information about the error, if available.",
                                    "nullable": true,
                                    "default": null,
                                    "example": null
                                },
                                "status_code": {
                                    "type": "integer",
                                    "description": "The HTTP status code indicating the service is temporarily unavailable.",
                                    "default": 503,
                                    "example": 503
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}