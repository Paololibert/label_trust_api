{
    "get": {
        "summary": "Retrieve list of roles",
        "operationId": "fetchListOfRoles",
        "description": "Retrieves roles information based on certain criteria.",
        "parameters": [
            {
                "$ref": "../../components/headers/authorization_header.json"
            },
            {
                "$ref": "../../components/headers/content_type.json"
            },
            {
                "$ref": "../../components/headers/accept.json"
            },
            {
                "$ref": "../../components/headers/origin.json"
            }
        ],
        "responses": {
            "200": {
                "description": "Successfully Response",
                "headers": {
                    "X-RateLimit-Limit": {
                        "$ref": "../../components/headers/x_ratelimit_limit.json"
                    },
                    "X-RateLimit-Remaining": {
                        "$ref": "../../components/headers/x_ratelimit_remaining.json"
                    },
                    "Access-Control-Allow-Origin": {
                        "$ref": "../../components/headers/access_control_allow_origin.json"
                    },
                    "Access-Control-Allow-Methods": {
                        "$ref": "../../components/headers/access_control_allow_methods.json"
                    },
                    "Access-Control-Allow-Credentials": {
                        "$ref": "../../components/headers/access_control_allow_credentials.json"
                    },
                    "Access-Control-Max-Age": {
                        "$ref": "../../components/headers/access_control_max_age.json"
                    },
                    "Access-Control-Allow-Headers": {
                        "$ref": "../../components/headers/access_control_allow_headers.json"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "boolean",
                                    "description": "Indicates whether the request was successful.",
                                    "default": true,
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Additional information about the response.",
                                    "nullable": true,
                                    "default": null,
                                    "example": "List of roles retrieve successfully"
                                },
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "current_page": {
                                            "type": "integer",
                                            "description": "The current page number.",
                                            "default": 1,
                                            "minimum": 1,
                                            "example": 1
                                        },
                                        "data": {
                                            "type": "array",
                                            "description": "List of roles.",
                                            "items": {
                                                "$ref": "../../components/schemas/models/role.json#/Role"
                                            }
                                        },
                                        "first_page_url": {
                                            "type": "string",
                                            "description": "The URL of the first page."
                                        },
                                        "from": {
                                            "type": "integer",
                                            "description": "The index of the first item in the current page.",
                                            "nullable": true,
                                            "default": null,
                                            "example": 1
                                        },
                                        "last_page": {
                                            "type": "integer",
                                            "description": "The index of the last item in the current page.",
                                            "minimum": 1,
                                            "default": 1,
                                            "example": 1
                                        },
                                        "last_page_url": {
                                            "type": "string",
                                            "description": "The URL of the last page."
                                        },
                                        "links": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "url": {
                                                        "type": "string",
                                                        "description": "The URL of the page.",
                                                        "nullable": true,
                                                        "default": null,
                                                        "example": null
                                                    },
                                                    "label": {
                                                        "type": "string",
                                                        "description": "The label of the page.",
                                                        "nullable": true,
                                                        "default": "1",
                                                        "example": "&laquo; Previous"
                                                    },
                                                    "active": {
                                                        "type": "boolean",
                                                        "description": "Indicates whether the page is active.",
                                                        "default": false,
                                                        "example": true
                                                    }
                                                }
                                            }
                                        },
                                        "next_page_url": {
                                            "type": "string",
                                            "description": "The URL of the next page.",
                                            "nullable": true,
                                            "default": null,
                                            "example": null
                                        },
                                        "path": {
                                            "type": "string",
                                            "description": "The path of the current page."
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "description": "The total number of items available per page. Defaults to 15, with a minimum of 10 and a maximum of 25.",
                                            "default": 15,
                                            "example": 15,
                                            "minimum": 10,
                                            "maximum": 25
                                        },
                                        "prev_page_url": {
                                            "type": "string",
                                            "description": "The URL of the previous page.",
                                            "nullable": true,
                                            "default": null,
                                            "example": null
                                        },
                                        "to": {
                                            "type": "integer",
                                            "description": "The ending index of the data on the current page. Example value is 2. Can be null.",
                                            "example": null,
                                            "default": null,
                                            "nullable": true
                                        },
                                        "total": {
                                            "type": "integer",
                                            "description": "The total number of items.",
                                            "minimum": 0,
                                            "default": 0,
                                            "example": 0
                                        }
                                    }
                                },
                                "status_code": {
                                    "type": "integer",
                                    "description": "Indicates whether the request was successful.",
                                    "default": 200,
                                    "example": 200
                                }
                            }
                        }
                    }
                }
            },
            "400": {
                "$ref": "../../components/responses/errors/400.json#BadRequest"
            },
            "405": {
                "$ref": "../../components/responses/errors/405.json#MethodNotAllowed"
            },
            "408": {
                "$ref": "../../components/responses/errors/408.json#RequestTimeout"
            },
            "422": {
                "$ref": "../../components/responses/errors/422.json#UnprocessableEntity"
            },
            "429": {
                "$ref": "../../components/responses/errors/429.json#RateLimitExceeded"
            },
            "500": {
                "$ref": "../../components/responses/errors/500.json#InternalServerError"
            },
            "503": {
                "$ref": "../../components/responses/errors/503.json#ServiceUnavailable"
            }
        }
    },
    "post": {
        "summary": "Create a new role",
        "operationId": "createRole",
        "description": "Creates a new role with the provided data.",
        "parameters": [
            {
                "$ref": "../../components/headers/authorization_header.json"
            },
            {
                "$ref": "../../components/headers/content_type.json"
            },
            {
                "$ref": "../../components/headers/accept.json"
            },
            {
                "$ref": "../../components/headers/origin.json"
            }
        ],
        "requestBody": {
            "required": true,
            "content": {
                "application/json": {
                    "schema": {
                        "$ref": "../../components/requestBodies/roles/role_request.json#/RoleRequest"
                    }
                }
            }
        },
        "responses": {
            "201": {
                "description": "Successfully Response",
                "headers": {
                    "X-RateLimit-Limit": {
                        "$ref": "../../components/headers/x_ratelimit_limit.json"
                    },
                    "X-RateLimit-Remaining": {
                        "$ref": "../../components/headers/x_ratelimit_remaining.json"
                    },
                    "Access-Control-Allow-Origin": {
                        "$ref": "../../components/headers/access_control_allow_origin.json"
                    },
                    "Access-Control-Allow-Methods": {
                        "$ref": "../../components/headers/access_control_allow_methods.json"
                    },
                    "Access-Control-Allow-Credentials": {
                        "$ref": "../../components/headers/access_control_allow_credentials.json"
                    },
                    "Access-Control-Max-Age": {
                        "$ref": "../../components/headers/access_control_max_age.json"
                    },
                    "Access-Control-Allow-Headers": {
                        "$ref": "../../components/headers/access_control_allow_headers.json"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "boolean",
                                    "description": "Indicates whether the request was successful.",
                                    "default": true,
                                    "example": true
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Additional information about the response.",
                                    "default": "Role created successfully",
                                    "example": "Role created successfully"
                                },
                                "data": {
                                    "$ref": "../../components/schemas/models/role.json#/Role"
                                },
                                "status_code": {
                                    "type": "integer",
                                    "description": "Indicates the HTTP status code of the response.",
                                    "default": 201,
                                    "example": 201
                                }
                            }
                        }
                    }
                }
            },
            "400": {
                "$ref": "../../components/responses/errors/400.json#BadRequest"
            },
            "401": {
                "$ref": "../../components/responses/errors/401.json#Unauthorized"
            },
            "403": {
                "$ref": "../../components/responses/errors/403.json#Forbidden"
            },
            "405": {
                "$ref": "../../components/responses/errors/405.json#MethodNotAllowed"
            },
            "408": {
                "$ref": "../../components/responses/errors/408.json#RequestTimeout"
            },
            "422": {
                "$ref": "../../components/responses/errors/422.json#UnprocessableEntity"
            },
            "429": {
                "$ref": "../../components/responses/errors/429.json#RateLimitExceeded"
            },
            "500": {
                "$ref": "../../components/responses/errors/500.json#InternalServerError"
            },
            "503": {
                "$ref": "../../components/responses/errors/503.json#ServiceUnavailable"
            }
        }
    }
}